"use strict";
/******************************************************************************
 * Copyright 2022 TypeFox GmbH
 * This program and the accompanying materials are made available under the
 * terms of the MIT License, which is available in the project root.
 ******************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateTypesFile = void 0;
const langium_1 = require("langium");
const type_system_1 = require("langium/lib/grammar/type-system");
const grammar_1 = require("langium/lib/grammar/generated/grammar");
const util_1 = require("./util");
function generateTypesFile(services, grammars) {
    const { unions, interfaces } = (0, type_system_1.collectAst)(grammars, services.shared.workspace.LangiumDocuments);
    const reservedWords = new Set((0, util_1.collectKeywords)((0, grammar_1.LangiumGrammarGrammar)()));
    const fileNode = new langium_1.CompositeGeneratorNode();
    unions.forEach(union => fileNode.append(union.toDeclaredTypesString(reservedWords)).append(langium_1.NL));
    interfaces.forEach(iFace => fileNode.append(iFace.toDeclaredTypesString(reservedWords)).append(langium_1.NL));
    return (0, langium_1.toString)(fileNode);
}
exports.generateTypesFile = generateTypesFile;
//# sourceMappingURL=types-generator.js.map